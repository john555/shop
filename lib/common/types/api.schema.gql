# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""AuthSignin"""
type AuthSignin {
  accessToken: String!
  refreshToken: String!
}

input AuthSigninInput {
  email: String!
  password: String!
}

"""AuthSignout"""
type AuthSignout {
  success: Boolean!
}

"""AuthSignup"""
type AuthSignup {
  accessToken: String!
  refreshToken: String!
}

input AuthSignupInput {
  email: String!
  firstName: String
  lastName: String
  password: String!
}

"""Position of currency symbol"""
enum CurrencyPosition {
  AFTER_AMOUNT
  BEFORE_AMOUNT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  createStore(input: StoreCreateInput!): Store!
  createUser(input: UserCreateInput!): User!

  """Refresh auth token"""
  refresh: AuthSignin!

  """Sign in"""
  signin(input: AuthSigninInput!): AuthSignin!

  """Sign out"""
  signout: AuthSignout!

  """Sign up new user"""
  signup(input: AuthSignupInput!): AuthSignup!
  updateStore(input: StoreUpdateInput!): Store!
  updateUser(input: UserUpdateInput!): User!
}

type Query {
  """Get current user"""
  me: User!
  myStores(cursor: String, skip: Int! = 0, sortOrder: SortOrder, take: Int! = 25): [Store!]!
  store(
    """ID of the Store"""
    id: ID!
  ): Store!
  user(id: String!): User!
  users(cursor: String, skip: Int! = 0, sortOrder: SortOrder, take: Int! = 25): [User!]!
}

enum SortOrder {
  ASC
  DESC
}

"""store"""
type Store {
  """Date the Store was created"""
  createdAt: DateTime!

  """Currency of the Store"""
  currency: StoreCurrency!

  """Position of currency symbol"""
  currencyPosition: CurrencyPosition!

  """Custom currency symbol"""
  currencySymbol: String

  """Email of the Store"""
  email: String!

  """Facebook page of the Store"""
  facebook: String

  """ID of the Store"""
  id: ID!

  """Instagram handle of the Store"""
  instagram: String

  """Name of the Store"""
  name: String!

  """Order number prefix"""
  orderPrefix: String

  """Order number suffix"""
  orderSuffix: String

  """ID of the User who owns the store"""
  ownerId: String!

  """Phone number of the Store"""
  phone: String

  """Whether to show currency code"""
  showCurrencyCode: Boolean!

  """Slug of the Store"""
  slug: String!

  """Timezone of the Store"""
  timeZone: String!

  """Type of the Store"""
  type: StoreType!

  """Measurement system"""
  unitSystem: UnitSystem!

  """Date the Store was last updated"""
  updatedAt: DateTime!

  """Weight unit"""
  weightUnit: WeightUnit!

  """WhatsApp number of the Store"""
  whatsApp: String
}

input StoreCreateInput {
  """Currency of the Store"""
  currency: StoreCurrency!

  """Position of currency symbol"""
  currencyPosition: CurrencyPosition = BEFORE_AMOUNT

  """
  Custom currency symbol. If not provided, defaults will be used based on currency.
  """
  currencySymbol: String

  """Facebook page username/handle"""
  facebook: String

  """Instagram handle (without @)"""
  instagram: String

  """Name of the Store"""
  name: String!

  """Prefix for order numbers"""
  orderPrefix: String = "#"

  """Suffix for order numbers"""
  orderSuffix: String

  """Phone number of the Store"""
  phone: String

  """Whether to show currency code"""
  showCurrencyCode: Boolean = false

  """Slug of the Store"""
  slug: String!

  """Timezone for the store"""
  timeZone: String = "Africa/Nairobi"

  """Type of the Store"""
  type: StoreType!

  """Unit system for measurements"""
  unitSystem: UnitSystem = METRIC

  """Weight unit for products"""
  weightUnit: WeightUnit = KILOGRAM

  """WhatsApp business number"""
  whatsApp: String
}

"""The currency of store"""
enum StoreCurrency {
  BIF
  KES
  RWF
  SSP
  TZS
  UGX
}

"""The type of store"""
enum StoreType {
  PHYSICAL_GOODS
  REAL_ESTATE
  VEHICLES
}

input StoreUpdateInput {
  """Position of currency symbol"""
  currencyPosition: CurrencyPosition

  """Custom currency symbol. Set to null to use currency defaults."""
  currencySymbol: String

  """Facebook page username/handle"""
  facebook: String

  """ID of the Store"""
  id: ID!

  """Instagram handle (without @)"""
  instagram: String

  """Name of the Store"""
  name: String

  """Prefix for order numbers"""
  orderPrefix: String

  """Suffix for order numbers"""
  orderSuffix: String

  """Phone number of the Store"""
  phone: String

  """Whether to show currency code"""
  showCurrencyCode: Boolean

  """Slug of the Store"""
  slug: String

  """Timezone for the store"""
  timeZone: String

  """Unit system for measurements"""
  unitSystem: UnitSystem

  """Weight unit for products"""
  weightUnit: WeightUnit

  """WhatsApp business number"""
  whatsApp: String
}

"""Measurement system used by the store"""
enum UnitSystem {
  IMPERIAL
  METRIC
}

"""user"""
type User {
  """Date the User was created"""
  createdAt: DateTime!

  """Email of the User"""
  email: String!

  """Whether the User email is verified"""
  emailVerified: Boolean!

  """First name of the User"""
  firstName: String

  """ID of the User"""
  id: ID!

  """URL of the User image"""
  imageUrl: String

  """Last name of the User"""
  lastName: String

  """Stores owned by the User"""
  stores: [Store!]!

  """Date the User was last updated"""
  updatedAt: DateTime!
}

input UserCreateInput {
  """Email of the User"""
  email: String!

  """First name of the User"""
  firstName: String

  """URL of the User image"""
  imageUrl: String

  """Last name of the User"""
  lastName: String

  """Password of the User"""
  password: String
}

input UserUpdateInput {
  """First name of the User"""
  firstName: String

  """ID of the User"""
  id: String!

  """URL of the User image"""
  imageUrl: String

  """Last name of the User"""
  lastName: String
}

"""Weight unit used by the store"""
enum WeightUnit {
  GRAM
  KILOGRAM
  OUNCE
  POUND
}